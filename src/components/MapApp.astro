---
import { MapIcon } from "lucide-react";
import Leaflet from "./Leaflet.astro";
import Tree from "./Tree";
---

<script>
    import L from "leaflet";

    function dropHandler(e: DragEvent) {
        e.preventDefault();

        if (e.dataTransfer === null) {
            return;
        }

        const map = document.getElementsByTagName("leaflet-map")[0].map;
        if (map === undefined) {
            return;
        }

        if (e.dataTransfer.items) {
            // Use DataTransferItemList interface to access the file(s)
            [...e.dataTransfer.items].forEach((item, i) => {
                // If dropped items aren't files, reject them
                if (item.kind === "file") {
                    const file = item.getAsFile();
                    if (file !== null) {
                        if (
                            file.name.endsWith(".jpg") ||
                            file.name.endsWith(".jpeg") ||
                            file.name.endsWith(".png") ||
                            file.name.endsWith(".gif") ||
                            file.name.endsWith(".svg") ||
                            file.name.endsWith(".webp") ||
                            file.name.endsWith(".bmp")
                        ) {
                            const img = L.distortableImageOverlay(
                                URL.createObjectURL(file),
                                {
                                    selected: false,
                                    editable: false,
                                },
                            ).addTo(map);
                        } else if (
                            file.name.endsWith(".geojson") ||
                            file.name.endsWith(".json")
                        ) {
                            const reader = new FileReader();
                            reader.onload = function () {
                                const jsonText = reader.result;
                                L.geoJSON(JSON.parse(jsonText)).addTo(map);
                            };
                            reader.readAsText(file);
                        }
                    }
                }
            });
        } else {
            // Use DataTransfer interface to access the file(s)
            [...e.dataTransfer.files].forEach((file, i) => {
                //TODO
                console.log(`… file[${i}].name = ${file.name}`);
            });
        }
    }

    function dragOverHandler(e: DragEvent) {
        e.preventDefault();
    }

    const container = document.getElementById("container")!!;
    container.ondragover = dragOverHandler;
    container.ondrop = dropHandler;
</script>

<div id="container">
    <main class="flex flex-row justify-center">
        <section class="p-4 overflow-scroll" style="width:20vw;height:100vh;">
            <h1 class="text-xl font-medium text-neutral-200">
                Cartographer <MapIcon className="inline w-6" />
            </h1>
            <hr class="width-full border-t-2 border-neutral-500 m-2" />
            <div id="layers">
                <Tree client:only />
            </div>
        </section>
        <section id="map-section">
            <Leaflet
                container="leafletmap"
                latitude="47.795595"
                longitude="17.259191"
                zoom="3.2"
                tileLayer="https://tiles.stadiamaps.com/tiles/stamen_toner/{z}/{x}/{y}.png"
                attribution="© OpenStreetMap"
                containerstyle="width: 80vw; height: 100vh;"
            />
        </section>
    </main>
</div>

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        filter: blur(100px);
    }

    #container {
        font-family:
            Inter,
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            "Open Sans",
            "Helvetica Neue",
            sans-serif,
            "Helvetica Neue",
            "Arial Nova",
            "Nimbus Sans",
            Arial,
            sans-serif;
        height: 100%;
    }
</style>
